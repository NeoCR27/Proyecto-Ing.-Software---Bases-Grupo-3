@model ProyectoPI.Models.CLIENTE

@{
    ViewBag.Title = "Edit";
}

<h2 class="titulosPag">modificar CLIENTE</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.cedulaPK)

    <div class="form-group">
        @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2 required" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.primerApellido, htmlAttributes: new { @class = "control-label col-md-2 required" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.primerApellido, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.primerApellido, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.segundoApellido, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.segundoApellido, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.segundoApellido, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.tel, htmlAttributes: new { @class = "control-label col-md-2 required" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.tel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.correo, htmlAttributes: new { @class = "control-label col-md-2 required" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.provincia, htmlAttributes: new { @class = "control-label col-md-2 required" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.provincia, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.provincia, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.canton, htmlAttributes: new { @class = "control-label col-md-2 required" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.canton, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.canton, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.distrito, htmlAttributes: new { @class = "control-label col-md-2 required" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.distrito, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.distrito, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.direccionExacta, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.direccionExacta, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.direccionExacta, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="crearIndex" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Volver", "Index", null, new { @class = "volverBoton" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
