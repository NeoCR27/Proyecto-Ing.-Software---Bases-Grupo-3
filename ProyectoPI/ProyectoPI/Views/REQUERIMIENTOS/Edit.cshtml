@model ProyectoPI.Models.REQUERIMIENTOS

@{
    ViewBag.Title = "Edit";
    string idProy = ViewBag.idProy;
    string estadoActual = ViewBag.estadoActual;
    string dificultad = ViewBag.dificultad;
    string tester = ViewBag.tester;
}


<h2 class="titulosPag">MODIFICAR REQUERIMIENTO: @Model.nombrePK</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <input type="hidden" id="idProy" name="idProy" value=@idProy>
    <input type="hidden" id="estadoAnterior" name="estadoAnterior" value=@estadoActual>
    <input type="hidden" id="dificultadAnterior" name="dificultadAnterior" value=@dificultad>
    <input type="hidden" id="testerAnterior" name="testerAnterior" value=@dificultad>


    <div class="form-group">
        @Html.LabelFor(model => model.nombrePK, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombrePK, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombrePK, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.fechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.fechaInicio, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })

            @Html.ValidationMessageFor(model => model.fechaInicio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.fechaEntrega, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.fechaEntrega, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })

            @Html.ValidationMessageFor(model => model.fechaEntrega, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.horasEstimadas, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.horasEstimadas, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.horasEstimadas, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.horasReales, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.horasReales, new { htmlAttributes = new { @class = "form-control", @disabled = true } })
            @Html.ValidationMessageFor(model => model.horasReales, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.dificultad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" place>
            <select class="form-control" id="dificultad" name="dificultad">
                <option value="" disabled selected>Seleccione la Dificultad</option>
                <option>Alta</option>
                <option>Baja</option>
                <option>Intermedio</option>

            </select>
        </div>
    </div>


    <div class="form-group">
        @Html.Label("Estado actual", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="form-control" id="estado" name="estado">
                <option selected disabled>Seleccione un Estado Actual</option>
                <option>En-proceso</option>
                <option>Finalizado</option>
                <option>Cancelado</option>
            </select>
        </div>
    </div>

    <br />

    <div style=" right:3000px;width:800px " class="jumbotron">
        <p style="text-align:center" display-1">Resultados Finales</p>
        <div class="form-group">
            @Html.LabelFor(model => model.estado_final, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.descripcion_resultado, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @{
                string URL = Request.Url.ToString();
            }
            <a class="botonGeneral colorRojo" href="@URL" role="button"> Cancelar</a>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <button type="button" class="botonGeneral colorVerde" data-toggle="modal" data-target="#guardar">
                Aceptar
            </button>

        </div>
    </div>
    <!-- Modal -->
    <div class="modal fade" id="guardar" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel"><strong>¿Está seguro que desea guardar los cambios realizados?</strong></h5>
                    <h5 class="modal-body" id="exampleModalLabel">
                        <strong>
                            En caso de modificar el ESTADO y ponerlo en CANCELADO o FINALIZADO el proyecto se FINALIZARÁ y se harán los cálculos finales
                            de duración.
                        </strong>
                    </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
                    <input type="submit" value="Aceptar" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
</div>
}



<div>
    @Html.ActionLink("Volver", "Index", new { id = Model.idFK }, new { @class = "botonGeneral colorGris" })
</div>