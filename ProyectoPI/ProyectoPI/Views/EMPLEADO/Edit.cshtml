@model ProyectoPI.Models.EMPLEADO

@{
    ViewBag.Title = "Edit";
}
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Mi aplicaci�n ASP.NET</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

</head>
<body onload="getProvinciasEdit('@Model.provincia','@Model.canton','@Model.distrito')">
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Inicio", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Cliente", "Index", "CLIENTE")</li>
                    <li>@Html.ActionLink("Proyecto", "Index", "PROYECTOes")</li>
                    <li>@Html.ActionLink("Equipo", "Index", "PARTICIPA")</li>
                    <li>@Html.ActionLink("Empleado", "Index", "EMPLEADO")</li>



                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <h2 class="titulosPag">Editar empleado </h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.cedulaPK)

            <div class="form-group">
                @Html.LabelFor(model => model.tel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.tel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.primerApellido, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.primerApellido, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.primerApellido, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.segundoApellido, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.segundoApellido, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.segundoApellido, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.fechaNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.fechaNacimiento, new { @type = "date", @class = "form-control datepicker", })
                    @Html.ValidationMessageFor(model => model.fechaNacimiento, "", new { @class = "text-danger" })
                </div>
            </div>

            <p><br /></p>
            <div class="ubicActual">

                @Html.LabelFor(model => model.fechaNacimiento, new { htmlAttributes = new { @class = "control-label col-md-2" } })
                @Html.DisplayFor(model => model.fechaNacimiento, new { htmlAttributes = new { @class = "col-md-10" } })

            </div>
            <p><br /></p>

            <div class="form-group">
                @Html.LabelFor(model => model.edad, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.edad, Enumerable.Range(18, 99).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control", @required = "required" })
                    @Html.ValidationMessageFor(model => model.edad, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.correo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.provincia, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    <div id="destino"></div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.canton, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    <div id="destino2"></div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.distrito, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    <div id="destino3"></div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.direccionExacta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.direccionExacta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.direccionExacta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.horasLaboradas, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.horasLaboradas, Enumerable.Range(18, 99).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control", @required = "required" })
                    @Html.ValidationMessageFor(model => model.horasLaboradas, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.disponibilidad, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @{
                            List<SelectListItem> list = new List<SelectListItem>();
                            list.Add(new SelectListItem
                            {
                                Text = "No disponible",
                                Value = "No disponible"
                            });
                            list.Add(new SelectListItem
                            {
                                Text = "Disponible",
                                Value = "Disponible",
                                Selected = true
                            });

                        }
                        @Html.DropDownListFor(model => model.disponibilidad, list, new { htmlAttributes = new { @class = "form-control" } })

                        @Html.ValidationMessageFor(model => model.disponibilidad, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.rol, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{
                        List<SelectListItem> listItems = new List<SelectListItem>();
                        listItems.Add(new SelectListItem
                        {
                            Text = "Lider",
                            Value = "Lider"
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "Jefe",
                            Value = "Jefe",
                            Selected = true
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "Tester",
                            Value = "Tester"
                        });
                    }

                    @Html.DropDownListFor(model => model.rol, listItems, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.rol, "", new { @class = "text-danger" })
                </div>
            </div>



            <p><br /></p>

            <p><br /></p>
            <br />
            <p><strong>Los campos con <font color="red">*</font> son obligatorios.</strong></p>
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @{
                        string URL = Request.Url.ToString();
                    }
                    <a class="botonGeneral colorRojo" href="@URL" role="button"> Cancelar</a>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <button type="button" class="botonGeneral colorVerde" data-toggle="modal" data-target="#Aceptar">
                        Aceptar
                    </button>
                </div>
            </div>
            <div class="modal fade" id="Aceptar" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">

                            <h5 class="modal-title" id="exampleModalLabel"><strong>�Est� seguro que desea guardar los cambios realizados?</strong></h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
                            <input type="submit" value="Aceptar" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Volver", "Index", null, new { @class = "botonGeneral colorGris" })
    </div>

    @Html.Partial("Scripts")

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")
    }

</body>
</html>