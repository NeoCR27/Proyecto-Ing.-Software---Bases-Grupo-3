@model ProyectoPI.Models.PROYECTO

@{
    ViewBag.Title = "Create";
}

@{
    string rol = ViewBag.rol;
}
<h3>Rol: @rol</h3>

<h2>Crear</h2>

@if (@rol == "jefe")
{
    @:@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>PROYECTO</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.idPK, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.idPK, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.idPK, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.objetivo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.objetivo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.objetivo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.duracionEstimada, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.duracionEstimada, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.duracionEstimada, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.duracionReal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.duracionReal, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.duracionReal, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.fechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.fechaInicio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.fechaInicio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.fechaFinalizacion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.fechaFinalizacion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.fechaFinalizacion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cedulaClienteFK, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("cedulaClienteFK", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.cedulaClienteFK, "", new { @class = "text-danger" })
        </div>
    </div>


    @{
        SelectList lideres = ViewBag.lideres; // Para agarrar la lista que se le dió en el Controlador
    }
    <div class="form-group">
        @Html.Label("Líderes", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Líderes", lideres, null, htmlAttributes: new { @class = "form-control", @id = "liderEscogido" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Escriba el nombre del lider que escogió", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" name="liderEscogido" />
        </div>
    </div>
    <div class="col-md-10">
        
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Crear proyecto" class="btn btn-success" />
        </div>
    </div>
</div>
    }
}
else{
    <h1>Los @rol NO PUEDEN CREAR PROYECTOS</h1>
}


<div>
    @Html.ActionLink("Lista proyectos", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
