@model ProyectoPI.Models.PROYECTO

@{
    ViewBag.Title = "Create";
    string rol = ViewBag.rol;
    string idPK = ViewBag.idPK;
    List<SelectListItem> lideres = ViewBag.lideres; // Para agarrar la lista que se le dió en el Controlador
    List<SelectListItem> clientes = ViewBag.clientes; // Para agarrar la lista que se le dió en el Controlador
    ;
}


<h2 class="titulosPag">Crear Proyecto</h2>

@if (@rol.Equals("Jefe", StringComparison.InvariantCultureIgnoreCase))
{
    @:@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />

    <input type="hidden" id="idPK" name="idPK" value="default">

    <div class="form-group">
        @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2 required" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger", @name = "nombre" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.objetivo, htmlAttributes: new { @class = "control-label col-md-2 required" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.objetivo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.objetivo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="form-control" id="estado" name="estado">
                <option>No iniciado</option>
                <option>En proceso</option>
                <option>Finalizado</option>
                <option>Cancelado</option>
            </select>
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Líder del proyecto", htmlAttributes: new { @class = "control-label col-md-2 required" })
        <div class="col-md-10">
            @Html.DropDownList("Lideres", lideres, null, htmlAttributes: new { @class = "form-control", @name = "lideresDrop", @id = "lideresDrop" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Cliente a asignar el proyecto", htmlAttributes: new { @class = "control-label col-md-2 required" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.cedulaClienteFK, clientes, htmlAttributes: new { @class = "form-control", @name = "clientesDrop", @id = "clientesDrop" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.fechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.fechaInicio, new { @type = "date", @class = "form-control datepicker", })

            @Html.ValidationMessageFor(model => model.fechaInicio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.fechaFinalizacion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.fechaFinalizacion, new { @type = "date", @class = "form-control datepicker", })

            @Html.ValidationMessageFor(model => model.fechaFinalizacion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.duracionEstimada, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.duracionEstimada, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.duracionEstimada, "", new { @class = "text-danger", @name = "duracionEstimada" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.duracionReal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.duracionReal, new { htmlAttributes = new { @class = "form-control", @name = "duracionReal" } })
            @Html.ValidationMessageFor(model => model.duracionReal, "", new { @class = "text-danger", @name = "duracionReal" })
        </div>
    </div>
    <br />
    <p><strong>Los campos con <font color="red">*</font> son obligatorios.</strong></p>
    <br />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @{
                string URL = Request.Url.ToString();
            }
            <a class="botonGeneral colorRojo" href="@URL" role="button"> Cancelar</a>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <input type="submit" value="Aceptar" class="botonGeneral colorVerde" />
        </div>
    </div>


</div>
    }
}
else
{
    <h1>Los @rol NO PUEDEN CREAR PROYECTOS</h1>
}


<div>
    @Html.ActionLink("Volver", "Index", null, new { @class = "botonGeneral colorGris" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
