@model ProyectoPI.Models.PROYECTO

@{
    ViewBag.Title = "Create";
}

@{
    string rol = ViewBag.rol;
    string idPK = ViewBag.idPK;
}

<h3>Rol: @rol</h3>

<h2 class="titulosPag">Crear</h2>

@if (@rol.Equals("Jefe", StringComparison.InvariantCultureIgnoreCase))
{
    @:@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>PROYECTO</h4>
            <hr />

            <input type="hidden" id="idPK" name="idPK" value="default">

            <div class="form-group">
                @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger", @name = "nombre" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objetivo, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.objetivo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.objetivo, "", new { @class = "text-danger", @name = "objetivo" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.duracionEstimada, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.duracionEstimada, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.duracionEstimada, "", new { @class = "text-danger", @name = "duracionEstimada" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.duracionReal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.duracionReal, new { htmlAttributes = new { @class = "form-control", @name = "duracionReal" } })
                    @Html.ValidationMessageFor(model => model.duracionReal, "", new { @class = "text-danger", @name = "duracionReal" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.fechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.fechaInicio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fechaInicio, "", new { @class = "text-danger", @name = "fechaInicio" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.fechaFinalizacion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.fechaFinalizacion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fechaFinalizacion, "", new { @class = "text-danger", @name = "fechaFinalizacion" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger", @name = "estado" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.cedulaClienteFK, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("cedulaClienteFK", null, htmlAttributes: new { @class = "form-control required" })
                    @Html.ValidationMessageFor(model => model.cedulaClienteFK, "", new { @class = "text-danger", @name = "cedulaClienteFK" })
                </div>
            </div>


            @{
                List<SelectListItem> lideres = ViewBag.lideres; // Para agarrar la lista que se le dió en el Controlador
            }

            <div class="form-group">
                @Html.Label("Lideres", htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    @Html.DropDownList("Lideres", lideres, null, htmlAttributes: new { @class = "form-control", @name = "lideresDrop", @id = "lideresDrop" })
                </div>
            </div>


            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-success" />
                @{
                    string URL = Request.Url.ToString();
                }

                <a class="btn btn-danger" href="@URL" role="button">Cancelar</a>
            </div>

        </div>
    }
}
else
{
    <h1>Los @rol NO PUEDEN CREAR PROYECTOS</h1>
}


<div>
    @Html.ActionLink("Regresar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
